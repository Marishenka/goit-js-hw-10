{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst dateInput = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet countdown;\nlet selectedDate;\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nfunction updateTimer() {\n  const now = new Date();\n  const ms = selectedDate - now;\n\n  if (ms <= 0) {\n    clearInterval(countdown);\n    iziToast.success({\n      title: 'Completed',\n      message: 'Countdown finished!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateInput.disabled = true;\n\n  countdown = setInterval(updateTimer, 1000);\n});\n"],"names":["dateInput","startButton","daysEl","hoursEl","minutesEl","secondsEl","countdown","selectedDate","flatpickr","selectedDates","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"wIAGA,MAAMA,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACAC,EAEJC,EAAUR,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAE1BF,GAAgB,IAAI,MACtB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,CAAC,EAED,SAASS,GAAc,CAErB,MAAMC,EAAKJ,EADC,IAAI,KAGhB,GAAII,GAAM,EAAG,CACX,cAAcL,CAAS,EACvB,SAAS,QAAQ,CACf,MAAO,YACP,QAAS,sBACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDT,EAAO,YAAce,EAAeL,CAAI,EACxCT,EAAQ,YAAcc,EAAeJ,CAAK,EAC1CT,EAAU,YAAca,EAAeH,CAAO,EAC9CT,EAAU,YAAcY,EAAeF,CAAO,CAChD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA,CAEA,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAjB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAU,SAAW,GAErBM,EAAY,YAAYI,EAAa,GAAI,CAC3C,CAAC"}